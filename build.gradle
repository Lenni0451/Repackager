plugins {
    id "java-gradle-plugin"
    id "com.gradle.plugin-publish" version "1.3.1"
    id "signing"
    id "checkstyle"
    id "net.raphimc.class-token-replacer" version "1.1.5"
}

base {
    java.toolchain.languageVersion = JavaLanguageVersion.of(8)
    compileJava.options.encoding = compileTestJava.options.encoding = javadoc.options.encoding = "UTF-8"

    archivesName = project.maven_name ?: rootProject.maven_name
    group = project.maven_group ?: rootProject.maven_group
    version = project.maven_version ?: rootProject.maven_version
}

gradlePlugin {
    website = "https://github.com/" + rootProject.github_repo
    vcsUrl = "https://github.com/" + rootProject.github_repo
    plugins {
        repackager {
            id = "net.lenni0451.repackager"
            implementationClass = "net.lenni0451.repackager.RepackagerPlugin"
            displayName = project.maven_name ?: rootProject.maven_name
            description = rootProject.maven_description
            tags.addAll("repackage", "repackager", "repackaging", "repack")
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly gradleApi()
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    compileOnly "org.jetbrains:annotations:26.0.2"
    compileOnly(annotationProcessor("org.projectlombok:lombok:1.18.38"))

    api "org.ow2.asm:asm:9.8"
    api "org.ow2.asm:asm-commons:9.8"
    api "org.ow2.asm:asm-tree:9.8"
    api "org.ow2.asm:asm-util:9.8"
}

sourceSets {
    main {
        classTokenReplacer {
            //Replace all instances of '${version}' with the project version
            property("\${version}", project.version)
        }
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    repositories {
        maven {
            name = "reposilite"
            def releasesUrl = "https://maven.lenni0451.net/releases"
            def snapshotsUrl = "https://maven.lenni0451.net/snapshots"
            url = project.maven_version.endsWith("SNAPSHOT") ? snapshotsUrl : releasesUrl

            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        pluginMaven(MavenPublication) {
            pom {
                name = rootProject.name
                description = rootProject.maven_description
                url = "https://github.com/" + rootProject.github_repo
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://github.com/" + rootProject.github_repo + "/blob/main/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "Lenni0451"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/" + rootProject.github_repo + ".git"
                    developerConnection = "scm:git:ssh://github.com/" + rootProject.github_repo + ".git"
                    url = "github.com/" + rootProject.github_repo
                }
            }
        }
    }
}

checkstyle {
    toolVersion = "9.3" //Latest version for Java 8: 9.3
    configFile = rootProject.file("config/checkstyle/checkstyle.xml")
}

signing {
    setRequired false
    sign configurations.archives
    sign publishing.publications.pluginMaven
}

project.tasks.withType(PublishToMavenRepository).forEach {
    it.dependsOn(project.tasks.withType(Sign))
}
build.dependsOn(check)
